// Go Interop Example
// Demonstrates calling Go functions from Flow
//
// To use this, you need to create a Go shared library:
//
// main.go:
// package main
//
// import "C"
//
// //export GoAdd
// func GoAdd(a, b int64) int64 {
//     return a + b
// }
//
// //export GoGreet
// func GoGreet(name *C.char) *C.char {
//     goName := C.GoString(name)
//     result := "Hello from Go, " + goName + "!"
//     return C.CString(result)
// }
//
// func main() {}
//
// Build with: go build -buildmode=c-shared -o libflowgo.so main.go

link "go:flowgo" {
    func GoAdd(a: int, b: int) -> int;
    func GoMultiply(a: int, b: int) -> int;
    func GoGreet(name: string) -> string;
    func GoPower(base: int, exp: int) -> int;
}

func testGoMath() {
    print("=== Go Math Functions ===");
    
    let sum: int = GoAdd(100, 200);
    print("GoAdd(100, 200) = " + sum);
    
    let product: int = GoMultiply(15, 7);
    print("GoMultiply(15, 7) = " + product);
    
    let power: int = GoPower(2, 10);
    print("GoPower(2, 10) = " + power);
}

func testGoString() {
    print("=== Go String Functions ===");
    
    let greeting: string = GoGreet("Flow Developer");
    print(greeting);
}

func main() {
    print("╔═══════════════════════════════╗");
    print("║  Go Interop Example          ║");
    print("╚═══════════════════════════════╝");
    print("");
    print("NOTE: This requires a Go shared library named 'libflowgo'");
    print("      See comments in source for build instructions.");
    print("");
    
    // Uncomment when Go library is available:
    // testGoMath();
    // testGoString();
    
    print("Go interop skeleton ready!");
}

